import cv2
import numpy as np
import os

def faceDetection(img):
    gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)

    face_haar = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
    faces_detec = face_haar.detectMultiScale(gray,1.04,5)
    return faces_detec,gray

def lables(directory):
    faces=[]
    faceID=[]

    for path,subdirnames,filenames in os.walk(directory):
        for filename in filenames:
            if filename.startswith('.'):
                print('Skipping system Files.')
                continue

            id = os.path.basename(path)
            img_path = os.path.join(path,filename)
            print('img path: ',img_path)
            print('ID: ',id)
            img = cv2.imread(img_path)
            if img is None:
                print('img not loaded properly.')
                continue
            faces_rect,gray = faceDetection(img)
            if(len(faces_rect)!=1):
                continue
            (x,y,w,h) = faces_rect[0]
            roi_gray = gray[y:y+h,x:x+w]
            faces.append(roi_gray)
            faceID.append(int(id))
    return faces,faceID


def training(faces,faceID):
    face_recognizer = cv2.face.LBPHFaceRecognizer_create()
    face_recognizer.train(faces,np.array(faceID))
    return face_recognizer


def rec(img,face):
    (x,y,h,w) = face
    cv2.rectangle(img,(x,y),(x+w,y+h),(5,200,1),2)


def text(img,text,x,y):
    cv2.putText(img,text,(x,y),cv2.FONT_HERSHEY_DUPLEX,1,(0,255,0),1)
    
    
    
